@using Kendo.Mvc.UI;
@using Newtonsoft.Json;
@model List<Sushi>

    @{
        List<string> model_tags = new List<string>();
        foreach (var product in Model)
        {
            foreach (var tag in product.tags)
            {
                if (!model_tags.Contains(tag))
                {
                    model_tags.Add(tag);
                }
            }

        }
    }
    <div class="k-d-flex k-justify-content-center">
        <div class="demo-section auto">
            <div class="food-filters">
                @(Html.Kendo().AutoComplete()
            .Name("categories")
            .Filter("contains")
            .Placeholder("Select dishes by tags")
            .BindTo(model_tags)
            .Events(e=>e.Select("autoCompleteSelect"))
            )
                <div>
                    <label class="k-label" for="filter-chips">Filter: </label>
                    <div id="filter-chips" class="filter-chips-container"></div>
                </div>
                @(Html.Kendo().ListView<Kendo.Mvc.Examples.Models.Sushi>()
            .Name("listView")
            .TagName("div")
            .ClientTemplateId("template")
            .Events(e=>e.DataBound("listViewDataBound"))
            )
            </div>
        </div>
    </div>

    <script id="template" type="text/x-kendo-tmpl">
    <div class="k-card k-card-vertical">
        <img class="k-card-media main-image" src='@Url.Content("~/content/mobile/apps/sushi")/images/200/#:image#' alt="#:kendo.htmlEncode(name)#" title="#:kendo.htmlEncode(name)#" />
        <div class="k-card-header">
            <h3 class="k-card-title"><span>#:name#</span> <span class="price"><span>$</span><span>#:kendo.toString(price,"n")#</span></span></h3>
            <div class="k-card-subtitle k-no-click tags-container">
                #if (tags) {#
                    #tags.forEach((item,ind) =>{#
                    @(Html.Kendo().Chip()
                        .Name("#=item#_#=id#")
                        .FillMode(ChipFillMode.Outline)
                        .Label("#=item#")
                        .ToClientTemplate()
                    )
                    #});#
                #}#
            </div>
        </div>
        <div class="k-card-body">
            <p class="description">#:description#</p>
        </div>
        <div class="k-actions k-card-actions k-actions-horizontal"
            <span class="k-card-action">
                <span class="buy-chip">
                    @(Html.Kendo().Chip()
                            .Name("buyChip_#=id#")
                            .Icon("cart")
                            .Label("Buy")
                            .Size(ComponentSize.Large)
                            .FillMode(ChipFillMode.Outline)
                            .ThemeColor(ChipThemeColor.Success)
                            .Selectable(true)
                            .Events(e=>e.Select("buyChipSelect"))
                            .ToClientTemplate()
                        )
                </span>
            </span>
            <span class="k-card-action">
                @(Html.Kendo().Chip()
                                .Name("favoriteChip_#=id#")
                                .Icon("heart-outline")
                                .Label("Favorite")
                                .Size(ComponentSize.Large)
                                .FillMode(ChipFillMode.Outline)
                                .ThemeColor(ChipThemeColor.Warning)
                                .Selectable(true)
                                .Events(e => e.Select("favoriteChipSelect"))
                                .ToClientTemplate()
                            )
                </span>
            </span>
        </div>
    </div>
    </script>
    @section scripts{
        <script>
            $(document).on("kendoReady", function () {
                $("#categories").data("kendoAutoComplete").wrapper.prepend('<span class="k-input-icon search"></span>');
                sushiDataSource = new kendo.data.DataSource({
                    data: sushiMenu,
                    schema: {
                        model: {
                            fields: {
                                name: { type: "string" },
                                price: { type: "number" },
                                tags: { type: "array" },
                                image: { type: "string" },
                                category: { type: "string" },
                                description: { type: "string" },
                                featured: { type: "boolean" }
                            }
                        }
                    },
                    filter: {
                        logic: "and",
                        filters: [
                            { field: "tags", value: "Hot", operator: containsTagOperatorFunc },
                            { field: "tags", value: "Meat", operator: containsTagOperatorFunc }
                        ]
                    }
                });
                $("#listView").data("kendoListView").setDataSource(sushiDataSource);

                kendo.ui.icon($(".search"), { icon: 'search' });
            });
            var sushiMenu = @Html.Raw(JsonConvert.SerializeObject(Model));
            var sushiDataSource;
            function buyChipSelect(ev) {
                ev.sender.setOptions({
                    label: ev.sender.select() ? "Buy" : "In Cart",
                });
            }
            function favoriteChipSelect(ev) {
                ev.sender.setOptions({
                    icon: ev.sender.select() ? "heart-outline" : "heart",
                })
            }
            function containsTagOperatorFunc(itemValue, filterValue) {
                return itemValue.map((x) => x.toLowerCase()).indexOf(filterValue.toLowerCase()) > -1;
            }

            function renderFilterChips(filterValues) {
                var filterChipsContainer = $("#filter-chips");
                kendo.destroy(filterChipsContainer);
                filterChipsContainer.empty();

                if (filterValues && filterValues.length > 0) {
                    filterValues
                        .forEach((filterValue) => $("<span></span>")
                            .appendTo(filterChipsContainer)
                            .kendoChip({
                                label: filterValue,
                                fillMode: "outline",
                                removable: true,
                                remove: function (ev) {
                                    var label = ev.sender.options.label;
                                    var filterOptions = sushiDataSource.filter();
                                    filterOptions.filters = filterOptions.filters.filter(x => x.value.toLowerCase() != label.toLowerCase());
                                    sushiDataSource.filter(filterOptions);
                                }
                            }
                            ));
                }
            }
            function listViewDataBound(e) {
                var grid = this;
                var filterValues = grid.dataSource.filter() ? grid.dataSource.filter().filters.map((filter) => filter.value) : null;
                renderFilterChips(filterValues)
            }
            function autoCompleteSelect(ev) {
                var label = ev.dataItem;
                //var sushiDataSource = $("#listView").data("kendoListView").dataSource;
                var filterOptions = sushiDataSource.filter();
                if (!filterOptions.filters.find(f => f.value == label)) {
                    filterOptions.filters.push({ field: 'tags', value: label, operator: containsTagOperatorFunc });
                }
                sushiDataSource.filter(filterOptions);
            }</script>
    }
    <style>
        .demo-section {
            width: 900px;
            max-width: 900px;
        }

        #listView {
            margin-top: 15px;
            height: 550px;
        }

        .food-filters {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
            padding: 9px;
            gap: 8px;
            border-width: 1px 1px 0px 1px;
            border-style: solid;
            border-color: rgba(0, 0, 0, 0.08);
        }

            .food-filters .k-chip-content {
                margin-inline-start: 4px;
            }


        .filter-chips-container {
            display: inline-flex;
            gap: 8px
        }

        .k-listview {
            overflow: auto;
            padding: 31px 23px 31px 23px;
        }

        .k-listview-content {
            display: flex;
            flex-wrap: wrap;
            justify-content: start;
            gap: 20px;
        }

        .k-listview-item.k-card {
            border-width: 1px;
            width: 228px;
            box-sizing: border-box;
        }

        .tags-container {
            display: flex;
            gap: 8px;
        }

        .k-card-title {
            font-size: 16px;
            display: flex;
            justify-content: space-between;
        }

        .k-card-actions .k-chip {
            font-size: 16px;
            padding: 9px 5px;
        }

        .k-card-footer {
            text-align: center;
            padding: 0;
        }

        .k-card-actions {
            gap: 8px;
            padding: 8px;
        }

            .k-card-actions .k-chip {
                font-size: 16px;
                padding: 9px 5px;
            }

        .k-card-action > .k-button {
            width: 100%;
            box-sizing: border-box;
        }

        .price {
            font-size: 17px;
            font-weight: bold;
            position: relative;
            display: inline-block;
            line-height: 1em;
        }
    </style>
