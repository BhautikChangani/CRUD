<div class="demo-wrapper k-d-flex k-flex-1">
    <div class="header !k-d-flex k-flex-col k-skeleton k-opacity-50 k-px-3.5 k-py-4 k-gap-2.5">
        <span class="k-skeleton k-opacity-70 k-skeleton-circle k-w-5 k-h-5"></span>
        <span class="k-skeleton k-opacity-40 k-skeleton-circle k-w-5 k-h-5"></span>
    </div>
    <div class="main-container k-d-flex k-flex-col k-w-full k-p-8">
        <h4 class="k-h4 k-w-full k-opacity-20 k-font-bold !k-mb-1.5">Order History</h4>
        <div class="k-d-flex k-w-full k-d-inline-block">Employee</div>
        <div class="k-d-flex k-flex-1 k-gap-x-8">
            <div class="k-d-flex k-flex-col k-flex-1">
                @(Html.Kendo().MultiColumnComboBox()
                    .Name("customers")
                    .DataTextField("ContactName")
                    .DataValueField("CustomerID")
                    .Filter("contains")
                    .FilterFields(new string[] { "ContactName", "ContactTitle", "CompanyName", "Country" })
                    .Columns(columns =>
                    {
                        columns.Add().Field("ContactName").Title("Contact Name").Template("<div class=\"customer-photo\" style=\"background-image: url(" + Url.Content("~/shared/web/Customers/") + "#:data.CustomerID#.jpg" + ");\"\"></div><span class=\"customer-name\">#: ContactName #</span>").Width("150px");
                        columns.Add().Field("ContactTitle").Title("Contact Title").Width("150px");
                        columns.Add().Field("CompanyName").Title("Company Name").Width("150px");
                        columns.Add().Field("Country").Title("Country").Width("150px");
                    })
                    .FooterTemplate("Total #: instance.dataSource.total() # items found")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .Height(400)
                    .DataSource(source => source
                    .Custom()
                    .Transport(transport => transport
                        .Read(read =>
                        {
                            read.Action("Overview_Customers_Read", "MultiColumnComboBox");
                        }))
                    )
                )
                <div class="k-d-flex k-flex-col k-gap-1 k-mt-5">
                    <span class="k-skeleton k-opacity-40 k-rounded-md k-w-24 k-px-3 k-h-4"></span>
                    <span class="k-skeleton k-opacity-30 k-rounded-md k-h-8"></span>
                </div>

                <div class="k-d-flex k-flex-col k-grow k-gap-1 k-mt-5">
                    <span class="k-skeleton k-opacity-40 k-rounded-md k-w-24 k-px-3 k-h-4"></span>
                    <span class="content-expanded k-grow k-skeleton k-opacity-30 k-rounded-md k-h-14"></span>
                </div>
            </div>
            <div class="kd-image-wrapper !k-d-flex k-flex-1 k-justify-content-center k-align-items-center k-skeleton k-opacity-10 k-border k-border-secondary k-border-solid k-rounded-md">
                <span class="k-icon k-font-icon k-i-chart-pie k-opacity-70"></span>
            </div>
        </div>
    </div>
</div>

<script>
    function onAdditionalData() {
        return {
            text: $("#customers").val()
        };
    }
</script>

<style>
    .demo-wrapper {
        grid-template-columns: 48px 1fr;
    }

    .kd-image-wrapper > .k-icon {
        font-size: 72px;
    }

    .customer-photo {
        display: inline-block;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin: 0 10px 0;
        @@ -45,5 +47,53 @@ background-size: 100%;
        background-repeat: no-repeat;
        vertical-align: middle;
    }
    /* Breakpoints for full screen demo: max:599px, min:759px and max: 959 */
    @@media (max-width: 678px), (min-width: 838px) and (max-width: 1038px), (min-width: 1241px) and (max-width: 1328px) {
        .kd-image-wrapper {
            display: none !important;
        }
    }
    /* Breakpoint for full screen demo: max:399px */
    @@media (max-width: 478px) {
        .demo-wrapper {
            flex-direction: column;
        }

        .header {
            flex-direction: row;
            padding: 10px 16px;
        }
    }
</style>