<div class="k-d-flex k-justify-content-center" style="padding-top: 54px;">
    <div class="k-w-300">
        <label for="orders">Orders</label>

        @(Html.Kendo().MultiColumnComboBox()
          .Name("orders")
          .DataTextField("ShipName")
          .DataValueField("OrderID")
          .Filter(FilterType.Contains)
          .Columns(columns =>
          {
              columns.Add().Field("OrderID").Title("ID").Width("100px");
              columns.Add().Field("ShipName").Title("Name").Width("300px");
              columns.Add().Field("ShipCountry").Title("Country").Width("200px");
          })
          .HtmlAttributes(new { style = "width:100%" })
          .Height(660)
          .DataSource(source => {
              source.Custom()
                  .ServerFiltering(true)
                  .ServerPaging(true)
                  .PageSize(80)
                  .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances
                  .Transport(transport =>
                  {
                      transport.Read("Virtualization_Read", "MultiColumnComboBox");
                  })
                  .Schema(schema =>
                  {
                      schema.Data("Data") //define the [data](https://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                            .Total("Total"); //define the [total](https://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
                  });
          })
          .Virtual(v => v.ItemHeight(33).ValueMapper("valueMapper"))
        )
    </div>
</div>
    @section scripts {
        <script>
    function valueMapper(options) {
        $.ajax({
            url: "@Url.Action("Orders_ValueMapper", "MultiColumnComboBox")",
            data: convertValues(options.value),
            success: function (data) {
                options.success(data);
            }
        });
    }

    function convertValues(value) {
        var data = {};

        value = $.isArray(value) ? value : [value];

        for (var idx = 0; idx < value.length; idx++) {
            data["values[" + idx + "]"] = value[idx];
        }

        return data;
    }
        </script>
    }
