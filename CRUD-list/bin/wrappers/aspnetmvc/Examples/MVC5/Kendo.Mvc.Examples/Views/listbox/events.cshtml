<div id="example" role="application">
    <div class="demo-section wide">
        @(Html.Kendo().ListBox()
            .Name("optional")
            .Toolbar(toolbar =>
            {
                toolbar.Position(Kendo.Mvc.UI.Fluent.ListBoxToolbarPosition.Right);
                toolbar.Tools(tools => tools
                    .MoveUp()
                    .MoveDown()                    
                    .TransferTo()
                    .TransferFrom()
                    .TransferAllTo()
                    .TransferAllFrom()
                    .Remove()
                );
            })
            .ConnectWith("selected")
            .Selectable(ListBoxSelectable.Multiple)
            .Draggable()
            .DropSources("selected")
            .DataTextField("ContactName")
            .DataValueField("CustomerID")
            .DataSource(source => source
                .Read(read => read.Action("Events_GetCustomers", "ListBox"))
            )
            .Events(events => events
                .Add("onAdd")
                .Change("onChange")
                .DataBound("onDataBound")
                .DragStart("onDragStart")
                .Drag("onDrag")
                .Drop("onDrop")
                .DragEnd("onDragEnd")
                .Remove("onRemove")
                .Reorder("onReorder")
            )
        )

        @(Html.Kendo().ListBox()
            .Name("selected")
            .ConnectWith("optional")
            .Selectable(ListBoxSelectable.Multiple)
            .Draggable()
            .DropSources(new string[]{"optional"})
            .DataTextField("ContactName")
            .DataValueField("CustomerID")
            .Events(events => events
                .Add("onAdd")
                .Change("onChange")
                .DataBound("onDataBound")
                .DragStart("onDragStart")
                .Drag("onDrag")
                .Drop("onDrop")
                .DragEnd("onDragEnd")
                .Remove("onRemove")
                .Reorder("onReorder")
            )
            .BindTo(new List<CustomerViewModel>())
        )
    </div>

@section scripts {
<script>
        function onAdd(e) {
            kendoConsole.log("add : " + getWidgetName(e) + " : " + e.dataItems.length + " item(s)");
        }

        function onChange(e) {
            kendoConsole.log("change : " + getWidgetName(e));
        }

        function onDataBound(e) {
            if ("kendoConsole" in window) {
                kendoConsole.log("dataBound : " + getWidgetName(e));
            }
        }

        function onRemove(e) {
            kendoConsole.log("remove : " + getWidgetName(e) + " : " + e.dataItems.length + " item(s)");
        };

        function onReorder(e) {
            kendoConsole.log("reorder : " + getWidgetName(e));
        }

        function onDragStart(e) {
            kendoConsole.log("dragstart : " + getWidgetName(e));
        }

        function onDrag(e) {
            kendoConsole.log("drag : " + getWidgetName(e));
        }

        function onDrop(e) {
            kendoConsole.log("drop : " + getWidgetName(e));
        }

        function onDragEnd(e) {
            kendoConsole.log("dragend : " + getWidgetName(e));
        }

        function getWidgetName(e) {
            var listBoxId = e.sender.element.attr("id");
            var widgetName = listBoxId === "optional" ? "left widget" : "right widget";
            return widgetName;
        }
    </script>
}
</div>

<style>
    #example .demo-section {
        text-align: center;
    }

    #example .k-listbox {
        width: 285px;
        height: 360px;
    }

        #example .k-listbox:first-of-type {
            margin-right: 5px;
        }
</style>
